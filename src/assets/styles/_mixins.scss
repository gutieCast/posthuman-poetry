@use './variables';
// Responsive

@mixin sm {
  // small mobile
  @media (max-width: 767px) {
      @content;
  }
}

@mixin md {
  // horizontal mobile - tablet
  @media (min-width: 768px) {
      @content;
  }
}

@mixin lg {
  // horizontal tablet - minilaptop
  @media (min-width: 999px) {
      @content;
  }
}

@mixin xl {
  // minilaptop
  @media (min-width: 1025px) {
      @content;
  }
}

@mixin xxl{
  // laptop
  @media (min-width: 1366px) {
      @content;
  }
}

@mixin xxxl {
  // Large-screen
  @media (min-width: 1824px) {
      @content;
  }
}

@mixin section {
  position: sticky;
  display: block;
  @content;
}

@mixin section-content {
  display: flex;
  flex-direction: column;
  // justify-content: space-around;
  position: relative;
  min-height: 100vh;

  &.--text-content {
    align-content: baseline;
  }

  &::after {
    height: 13vi;
  }
  @content;
}

// Mixin to apply staggered animation delays
@mixin animate-spans-title($count) {
  @for $i from 1 through $count {
    .word span:nth-child(#{$i}) {
      $delay: if($i == 1, 1s, 1s + ($i - 1) * 0.20s);
      animation-delay: $delay !important;
    }
  }
}

@mixin theme($text-color: variables.$color-white, $background-color: variables.$color-black) {
  h2, p, span {
    color: $text-color;
  }
  background-color: $background-color;
  
  .--text-content {
    .poem-container {
      // background-color: $background-color 0.5;
      border: 2px solid $text-color;
      // border-bottom: 1px solid $text-color;
      .title {
        color: $text-color;
      }
      .author {
        color: $text-color;
      }
      .poem {
        color: $text-color;
      }
    }
    .figure-container figcaption {
      color: $text-color;
    }

    
    .btn-transparent {
      @include btn-dynamic(transparent, $text-color, variables.$size-paragraph);
    }
  }  
  @content;
}

@mixin dark-theme {
  @include theme(variables.$color-white, variables.$color-black) {
    @content;
  }
}

@mixin light-theme {
  @include theme(variables.$color-black, variables.$color-white) {
    @content;
  }
}

@mixin btn-dynamic($bgColor: transparent, $color, $fs) {
  background-color: $bgColor;
  color: $color;
  font-size: $fs;
  @if ($bgColor == transparent) {
    border: none;
  } @else {
    border: 1px solid $bgColor;
  }
}
